// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PointOfSaleDataAccess;

#nullable disable

namespace PointOfSaleDataAccess.Migrations
{
    [DbContext(typeof(POSDBContext))]
    partial class POSDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PointOfSaleSystem.Models.Invoice.InvoiceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ComapnyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("OtherCost")
                        .HasColumnType("float");

                    b.Property<double>("TotalItemCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PointOfSaleSystem.Models.Product.ProductEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BarcodePrefix")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BarcodePrefix = "1001",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5551),
                            Name = "Product 1",
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5573)
                        },
                        new
                        {
                            Id = 2L,
                            BarcodePrefix = "1002",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5574),
                            Name = "Product 2",
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5575)
                        },
                        new
                        {
                            Id = 3L,
                            BarcodePrefix = "1003",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5576),
                            Name = "Product 3",
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5577)
                        },
                        new
                        {
                            Id = 4L,
                            BarcodePrefix = "1004",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5578),
                            Name = "Product 4",
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5579)
                        },
                        new
                        {
                            Id = 5L,
                            BarcodePrefix = "1005",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5580),
                            Name = "Product 5",
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5580)
                        });
                });

            modelBuilder.Entity("PointOfSaleSystem.Models.Stock.StockEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BarcodePrefix")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceEntityId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("UnitCost")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceEntityId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BarcodePrefix = "X1",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5745),
                            ProductId = 1L,
                            Quantity = 10,
                            Type = 0,
                            UnitCost = 123.34,
                            UnitPrice = 125.34,
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5745)
                        },
                        new
                        {
                            Id = 2L,
                            BarcodePrefix = "X2",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5748),
                            ProductId = 2L,
                            Quantity = 10,
                            Type = 0,
                            UnitCost = 12.09,
                            UnitPrice = 14.09,
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5748)
                        },
                        new
                        {
                            Id = 3L,
                            BarcodePrefix = "X3",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5751),
                            ProductId = 3L,
                            Quantity = 100,
                            Type = 0,
                            UnitCost = 2.0,
                            UnitPrice = 4.0,
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5752)
                        },
                        new
                        {
                            Id = 4L,
                            BarcodePrefix = "X4",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5754),
                            ProductId = 4L,
                            Quantity = 1000,
                            Type = 0,
                            UnitCost = 500.0,
                            UnitPrice = 600.0,
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5754)
                        },
                        new
                        {
                            Id = 5L,
                            BarcodePrefix = "X5",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5756),
                            ProductId = 5L,
                            Quantity = 5,
                            Type = 0,
                            UnitCost = 124.0,
                            UnitPrice = 126.0,
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5757)
                        },
                        new
                        {
                            Id = 6L,
                            BarcodePrefix = "X11",
                            CreatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5758),
                            ProductId = 1L,
                            Quantity = 35,
                            Type = 0,
                            UnitCost = 126.34,
                            UnitPrice = 128.34,
                            UpdatedDate = new DateTime(2023, 12, 17, 21, 12, 18, 995, DateTimeKind.Local).AddTicks(5759)
                        });
                });

            modelBuilder.Entity("PointOfSaleSystem.Models.Stock.StockEntity", b =>
                {
                    b.HasOne("PointOfSaleSystem.Models.Invoice.InvoiceEntity", null)
                        .WithMany("StockItems")
                        .HasForeignKey("InvoiceEntityId");

                    b.HasOne("PointOfSaleSystem.Models.Product.ProductEntity", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PointOfSaleSystem.Models.Invoice.InvoiceEntity", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("PointOfSaleSystem.Models.Product.ProductEntity", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
